Kernel command line: -q run priority-donate-lower
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  52,377,600 loops/s.
Boot complete.
Executing 'priority-donate-lower':
(priority-donate-lower) begin
(priority-donate-lower) Main thread should have priority 41.  Actual priority: 31.
(priority-donate-lower) Lowering base priority...
(priority-donate-lower) Main thread should have priority 41.  Actual priority: 21.
(priority-donate-lower) acquire must already have finished.
(priority-donate-lower) Main thread should have priority 21.  Actual priority: 21.
(priority-donate-lower) end
Execution of 'priority-donate-lower' complete.
Timer: 27 ticks
Thread: 1 idle ticks, 26 kernel ticks, 0 user ticks
Console: 820 characters output
(priority-donate-lower) acquire: got the lock
Kernel PANIC at ../../threads/synch.c:223 in lock_release(): assertion `lock_held_by_current_thread (lock)' failed.
Call stack: 0x8004213363 0x8004209f1b 0x80042189a4 0x8004207367.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 29 ticks
Thread: 1 idle ticks, 28 kernel ticks, 0 user ticks
Console: 1